{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Desktop\\\\Anibot\\\\code\\\\ottonomy\\\\client\\\\src\\\\components\\\\Node.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateNodePosition } from '../redux/graphSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Node = ({\n  id,\n  label,\n  position,\n  onClick,\n  isSelected,\n  onDelete\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const nodeRef = useRef(null);\n  const handleDragStart = e => {\n    e.dataTransfer.setDragImage(new Image(), 0, 0); // Prevent ghost drag image\n  };\n  const handleDrag = e => {\n    if (e.clientX === 0 && e.clientY === 0) return; // Ignore ghost drag events\n    const canvas = document.querySelector('.graph-canvas');\n    const canvasRect = canvas.getBoundingClientRect();\n    const newX = e.clientX - canvasRect.left - 30; // 30 = half of node width\n    const newY = e.clientY - canvasRect.top - 30; // 30 = half of node height\n\n    dispatch(updateNodePosition({\n      id,\n      position: {\n        x: newX,\n        y: newY\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: nodeRef,\n    style: {\n      position: 'absolute',\n      left: position.x,\n      top: position.y,\n      width: '60px',\n      height: '60px',\n      backgroundColor: isSelected ? '#90ee90' : '#87ceeb',\n      borderRadius: '50%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      border: '2px solid black',\n      cursor: 'grab',\n      fontSize: '14px',\n      color: 'black',\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    draggable: true,\n    onDragStart: handleDragStart,\n    onDrag: handleDrag,\n    onClick: onClick,\n    children: [label, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'absolute',\n        top: '-10px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        background: 'red',\n        color: 'white',\n        borderRadius: '50%',\n        border: 'none',\n        width: '16px',\n        height: '16px',\n        cursor: 'pointer',\n        padding: 0,\n        fontSize: '10px'\n      },\n      onClick: e => {\n        e.stopPropagation();\n        onDelete();\n      },\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Node, \"YCzdGcjtVqqucH410nUyiUXod7M=\", false, function () {\n  return [useDispatch];\n});\n_c = Node;\nexport default Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["React","useRef","useDispatch","updateNodePosition","jsxDEV","_jsxDEV","Node","id","label","position","onClick","isSelected","onDelete","_s","dispatch","nodeRef","handleDragStart","e","dataTransfer","setDragImage","Image","handleDrag","clientX","clientY","canvas","document","querySelector","canvasRect","getBoundingClientRect","newX","left","newY","top","x","y","ref","style","width","height","backgroundColor","borderRadius","display","justifyContent","alignItems","border","cursor","fontSize","color","fontWeight","textAlign","draggable","onDragStart","onDrag","children","transform","background","padding","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anish/Desktop/Anibot/code/ottonomy/client/src/components/Node.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateNodePosition } from '../redux/graphSlice';\r\n\r\nconst Node = ({ id, label, position, onClick, isSelected, onDelete }) => {\r\n  const dispatch = useDispatch();\r\n  const nodeRef = useRef(null);\r\n\r\n  const handleDragStart = (e) => {\r\n    e.dataTransfer.setDragImage(new Image(), 0, 0); // Prevent ghost drag image\r\n  };\r\n\r\n  const handleDrag = (e) => {\r\n    if (e.clientX === 0 && e.clientY === 0) return; // Ignore ghost drag events\r\n    const canvas = document.querySelector('.graph-canvas');\r\n    const canvasRect = canvas.getBoundingClientRect();\r\n\r\n    const newX = e.clientX - canvasRect.left - 30; // 30 = half of node width\r\n    const newY = e.clientY - canvasRect.top - 30; // 30 = half of node height\r\n\r\n    dispatch(updateNodePosition({ id, position: { x: newX, y: newY } }));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      ref={nodeRef}\r\n      style={{\r\n        position: 'absolute',\r\n        left: position.x,\r\n        top: position.y,\r\n        width: '60px',\r\n        height: '60px',\r\n        backgroundColor: isSelected ? '#90ee90' : '#87ceeb',\r\n        borderRadius: '50%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        border: '2px solid black',\r\n        cursor: 'grab',\r\n        fontSize: '14px',\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n      }}\r\n      draggable\r\n      onDragStart={handleDragStart}\r\n      onDrag={handleDrag}\r\n      onClick={onClick}\r\n    >\r\n      {label}\r\n      <button\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-10px',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)',\r\n          background: 'red',\r\n          color: 'white',\r\n          borderRadius: '50%',\r\n          border: 'none',\r\n          width: '16px',\r\n          height: '16px',\r\n          cursor: 'pointer',\r\n          padding: 0,\r\n          fontSize: '10px',\r\n        }}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          onDelete();\r\n        }}\r\n      >\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Node;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}