{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nconst initialState = {\n  nodes: [],\n  edges: [],\n  history: [],\n  // For undo functionality\n  future: [] // For redo functionality\n};\nconst graphSlice = createSlice({\n  name: 'graph',\n  initialState,\n  reducers: {\n    setGraph: (state, action) => {\n      state.nodes = action.payload.nodes;\n      state.edges = action.payload.edges;\n    },\n    addNode: (state, action) => {\n      state.history.push({\n        nodes: [...state.nodes],\n        edges: [...state.edges]\n      });\n      state.nodes.push({\n        id: uuidv4(),\n        label: action.payload.label || `Node ${state.nodes.length + 1}`,\n        position: action.payload.position\n      });\n      state.future = [];\n    },\n    removeNode: (state, action) => {\n      const nodeId = action.payload;\n      state.nodes = state.nodes.filter(node => node.id !== nodeId);\n      state.edges = state.edges.filter(edge => edge.source !== nodeId && edge.target !== nodeId);\n    },\n    addEdge: (state, action) => {\n      state.history.push({\n        nodes: [...state.nodes],\n        edges: [...state.edges]\n      });\n      state.edges.push({\n        source: action.payload.source,\n        target: action.payload.target\n      });\n      state.future = [];\n    },\n    removeEdge: (state, action) => {\n      state.edges = state.edges.filter(edge => edge.source !== action.payload.source || edge.target !== action.payload.target);\n    },\n    undo: state => {\n      if (state.history.length > 0) {\n        const previousState = state.history.pop();\n        state.future.push({\n          nodes: [...state.nodes],\n          edges: [...state.edges]\n        });\n        state.nodes = previousState.nodes;\n        state.edges = previousState.edges;\n      }\n    },\n    updateNodePosition: (state, action) => {\n      const {\n        id,\n        position\n      } = action.payload;\n      const node = state.nodes.find(node => node.id === id);\n      if (node) {\n        node.position = position;\n      }\n    },\n    redo: state => {\n      if (state.future.length > 0) {\n        const nextState = state.future.pop();\n        state.history.push({\n          nodes: [...state.nodes],\n          edges: [...state.edges]\n        });\n        state.nodes = nextState.nodes;\n        state.edges = nextState.edges;\n      }\n    }\n  }\n});\nexport const {\n  setGraph,\n  addNode,\n  removeNode,\n  addEdge,\n  removeEdge,\n  undo,\n  redo,\n  updateNodePosition\n} = graphSlice.actions;\nexport default graphSlice.reducer;","map":{"version":3,"names":["createSlice","v4","uuidv4","initialState","nodes","edges","history","future","graphSlice","name","reducers","setGraph","state","action","payload","addNode","push","id","label","length","position","removeNode","nodeId","filter","node","edge","source","target","addEdge","removeEdge","undo","previousState","pop","updateNodePosition","find","redo","nextState","actions","reducer"],"sources":["C:/Users/anish/Desktop/Anibot/code/ottonomy/client/src/redux/graphSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst initialState = {\r\n  nodes: [],\r\n  edges: [],\r\n  history: [], // For undo functionality\r\n  future: [],  // For redo functionality\r\n};\r\n\r\nconst graphSlice = createSlice({\r\n  name: 'graph',\r\n  initialState,\r\n  reducers: {\r\n    setGraph: (state, action) => {\r\n      state.nodes = action.payload.nodes;\r\n      state.edges = action.payload.edges;\r\n    },\r\n    addNode: (state, action) => {\r\n      state.history.push({ nodes: [...state.nodes], edges: [...state.edges] });\r\n      state.nodes.push({\r\n        id: uuidv4(),\r\n        label: action.payload.label || `Node ${state.nodes.length + 1}`,\r\n        position: action.payload.position,\r\n      });\r\n      state.future = [];\r\n    },\r\n    removeNode: (state, action) => {\r\n        const nodeId = action.payload;\r\n        state.nodes = state.nodes.filter((node) => node.id !== nodeId);\r\n        state.edges = state.edges.filter(\r\n          (edge) => edge.source !== nodeId && edge.target !== nodeId\r\n        );\r\n      },\r\n    addEdge: (state, action) => {\r\n      state.history.push({ nodes: [...state.nodes], edges: [...state.edges] });\r\n      state.edges.push({ source: action.payload.source, target: action.payload.target });\r\n      state.future = [];\r\n    },\r\n    removeEdge: (state, action) => {\r\n        state.edges = state.edges.filter(\r\n          (edge) =>\r\n            edge.source !== action.payload.source ||\r\n            edge.target !== action.payload.target\r\n        );\r\n      },\r\n    undo: (state) => {\r\n      if (state.history.length > 0) {\r\n        const previousState = state.history.pop();\r\n        state.future.push({ nodes: [...state.nodes], edges: [...state.edges] });\r\n        state.nodes = previousState.nodes;\r\n        state.edges = previousState.edges;\r\n      }\r\n    },\r\n    updateNodePosition: (state, action) => {\r\n        const { id, position } = action.payload;\r\n        const node = state.nodes.find((node) => node.id === id);\r\n        if (node) {\r\n          node.position = position;\r\n        }\r\n      },\r\n      \r\n    redo: (state) => {\r\n      if (state.future.length > 0) {\r\n        const nextState = state.future.pop();\r\n        state.history.push({ nodes: [...state.nodes], edges: [...state.edges] });\r\n        state.nodes = nextState.nodes;\r\n        state.edges = nextState.edges;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setGraph,\r\n  addNode,\r\n  removeNode,\r\n  addEdge,\r\n  removeEdge,\r\n  undo,\r\n  redo,\r\n  updateNodePosition\r\n} = graphSlice.actions;\r\n\r\nexport default graphSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}