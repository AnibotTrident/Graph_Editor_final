{"ast":null,"code":"export const fetchGraph = async graphId => {\n  try {\n    const response = await fetch(`/api/graph/${graphId}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch graph');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching graph:', error);\n    throw error;\n  }\n};\nexport const saveGraph = async graph => {\n  try {\n    const response = await fetch('/api/graph', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graph)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to save graph');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error saving graph:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchGraph","graphId","response","fetch","ok","Error","json","error","console","saveGraph","graph","method","headers","body","JSON","stringify"],"sources":["C:/Users/anish/Desktop/Anibot/code/ottonomy/client/src/utils/api.js"],"sourcesContent":["export const fetchGraph = async (graphId) => {\r\n    try {\r\n      const response = await fetch(`/api/graph/${graphId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch graph');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error fetching graph:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  export const saveGraph = async (graph) => {\r\n    try {\r\n      const response = await fetch('/api/graph', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(graph),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save graph');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error saving graph:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAOC,OAAO,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAcF,OAAO,EAAE,CAAC;IACrD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAOC,KAAK,IAAK;EACxC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACzCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK;IAC5B,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}