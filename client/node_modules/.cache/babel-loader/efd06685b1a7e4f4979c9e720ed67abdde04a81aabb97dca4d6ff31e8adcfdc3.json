{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Desktop\\\\Anibot\\\\code\\\\ottonomy\\\\client\\\\src\\\\components\\\\Edge.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGraph, addNode, addEdge, undo, redo } from '../redux/graphSlice';\nimport Node from './Node';\nimport Edge from './Edge';\nimport { fetchGraph, saveGraph } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphEditor = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    nodes,\n    edges\n  } = useSelector(state => state.graph);\n  const [draggingEdge, setDraggingEdge] = useState(null);\n  useEffect(() => {\n    const loadGraph = async () => {\n      const graph = await fetchGraph('default'); // Replace with actual graph ID\n      if (graph) dispatch(setGraph(graph));\n    };\n    loadGraph();\n    const handleKeyDown = event => {\n      if (event.ctrlKey && event.key === 'z') {\n        dispatch(undo());\n      } else if (event.ctrlKey && event.key === 'y') {\n        dispatch(redo());\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch]);\n  const handleAddNode = () => {\n    const position = {\n      x: Math.random() * 500,\n      y: Math.random() * 500\n    };\n    dispatch(addNode({\n      position\n    }));\n  };\n  const handleStartEdge = sourceId => {\n    setDraggingEdge({\n      source: sourceId\n    });\n  };\n  const handleEndEdge = targetId => {\n    if (draggingEdge && draggingEdge.source !== targetId) {\n      dispatch(addEdge({\n        source: draggingEdge.source,\n        target: targetId\n      }));\n    }\n    setDraggingEdge(null);\n  };\n  const handleSave = async () => {\n    const graph = {\n      nodes,\n      edges\n    };\n    await saveGraph(graph);\n    alert('Graph saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graph Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '500px',\n        border: '1px solid black'\n      },\n      children: [edges.map((edge, index) => /*#__PURE__*/_jsxDEV(Edge, {\n        source: edge.source,\n        target: edge.target\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)), nodes.map((node, index) => /*#__PURE__*/_jsxDEV(Node, {\n        id: node.id,\n        label: `N${index + 1}`,\n        position: node.position,\n        onStartEdge: handleStartEdge,\n        onEndEdge: handleEndEdge\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddNode,\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(undo()),\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(redo()),\n      children: \"Redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphEditor, \"Gt+GjVkD192FQDBypU/OTGS9yvE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GraphEditor;\nexport default GraphEditor;\nvar _c;\n$RefreshReg$(_c, \"GraphEditor\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","setGraph","addNode","addEdge","undo","redo","Node","Edge","fetchGraph","saveGraph","jsxDEV","_jsxDEV","GraphEditor","_s","dispatch","nodes","edges","state","graph","draggingEdge","setDraggingEdge","loadGraph","handleKeyDown","event","ctrlKey","key","window","addEventListener","removeEventListener","handleAddNode","position","x","Math","random","y","handleStartEdge","sourceId","source","handleEndEdge","targetId","target","handleSave","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","border","map","edge","index","node","id","label","onStartEdge","onEndEdge","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anish/Desktop/Anibot/code/ottonomy/client/src/components/Edge.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setGraph,\r\n  addNode,\r\n  addEdge,\r\n  undo,\r\n  redo,\r\n} from '../redux/graphSlice';\r\nimport Node from './Node';\r\nimport Edge from './Edge';\r\nimport { fetchGraph, saveGraph } from '../utils/api';\r\n\r\nconst GraphEditor = () => {\r\n  const dispatch = useDispatch();\r\n  const { nodes, edges } = useSelector((state) => state.graph);\r\n  const [draggingEdge, setDraggingEdge] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadGraph = async () => {\r\n      const graph = await fetchGraph('default'); // Replace with actual graph ID\r\n      if (graph) dispatch(setGraph(graph));\r\n    };\r\n    loadGraph();\r\n\r\n    const handleKeyDown = (event) => {\r\n      if (event.ctrlKey && event.key === 'z') {\r\n        dispatch(undo());\r\n      } else if (event.ctrlKey && event.key === 'y') {\r\n        dispatch(redo());\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const handleAddNode = () => {\r\n    const position = { x: Math.random() * 500, y: Math.random() * 500 };\r\n    dispatch(addNode({ position }));\r\n  };\r\n\r\n  const handleStartEdge = (sourceId) => {\r\n    setDraggingEdge({ source: sourceId });\r\n  };\r\n\r\n  const handleEndEdge = (targetId) => {\r\n    if (draggingEdge && draggingEdge.source !== targetId) {\r\n      dispatch(addEdge({ source: draggingEdge.source, target: targetId }));\r\n    }\r\n    setDraggingEdge(null);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const graph = { nodes, edges };\r\n    await saveGraph(graph);\r\n    alert('Graph saved successfully!');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Graph Editor</h1>\r\n      <div\r\n        style={{\r\n          position: 'relative',\r\n          width: '100%',\r\n          height: '500px',\r\n          border: '1px solid black',\r\n        }}\r\n      >\r\n        {edges.map((edge, index) => (\r\n          <Edge key={index} source={edge.source} target={edge.target} />\r\n        ))}\r\n        {nodes.map((node, index) => (\r\n          <Node\r\n            key={node.id}\r\n            id={node.id}\r\n            label={`N${index + 1}`}\r\n            position={node.position}\r\n            onStartEdge={handleStartEdge}\r\n            onEndEdge={handleEndEdge}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddNode}>Add Node</button>\r\n      <button onClick={handleSave}>Save Graph</button>\r\n      <button onClick={() => dispatch(undo())}>Undo</button>\r\n      <button onClick={() => dispatch(redo())}>Redo</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}