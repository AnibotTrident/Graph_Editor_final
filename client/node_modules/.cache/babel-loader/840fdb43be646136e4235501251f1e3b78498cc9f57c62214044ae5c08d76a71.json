{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Desktop\\\\Anibot\\\\code\\\\ottonomy\\\\client\\\\src\\\\components\\\\Edge.jsx\";\n// File: client/src/components/Edge.jsx\n\nimport React from \"react\";\nimport \"./Edge.css\"; // CSS for Edge component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edge = ({\n  edge,\n  onDelete\n}) => {\n  // Calculate the positions for the edge based on the nodes' positions.\n  const fromNode = edge.from; // Find the position of the start node\n  const toNode = edge.to; // Find the position of the end node\n\n  // Edge's position calculation logic (simplified for now)\n  const edgeStyle = {\n    left: fromNode.x,\n    top: fromNode.y,\n    width: Math.abs(fromNode.x - toNode.x),\n    height: Math.abs(fromNode.y - toNode.y),\n    transform: `rotate(${Math.atan2(toNode.y - fromNode.y, toNode.x - fromNode.x)}rad)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edge\",\n    style: edgeStyle,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDelete,\n      children: \"Delete Edge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Edge;\nexport default Edge;\nvar _c;\n$RefreshReg$(_c, \"Edge\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Edge","edge","onDelete","fromNode","from","toNode","to","edgeStyle","left","x","top","y","width","Math","abs","height","transform","atan2","className","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anish/Desktop/Anibot/code/ottonomy/client/src/components/Edge.jsx"],"sourcesContent":["// File: client/src/components/Edge.jsx\r\n\r\nimport React from \"react\";\r\nimport \"./Edge.css\"; // CSS for Edge component\r\n\r\nconst Edge = ({ edge, onDelete }) => {\r\n  // Calculate the positions for the edge based on the nodes' positions.\r\n  const fromNode = edge.from; // Find the position of the start node\r\n  const toNode = edge.to; // Find the position of the end node\r\n\r\n  // Edge's position calculation logic (simplified for now)\r\n  const edgeStyle = {\r\n    left: fromNode.x,\r\n    top: fromNode.y,\r\n    width: Math.abs(fromNode.x - toNode.x),\r\n    height: Math.abs(fromNode.y - toNode.y),\r\n    transform: `rotate(${Math.atan2(toNode.y - fromNode.y, toNode.x - fromNode.x)}rad)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"edge\" style={edgeStyle}>\r\n      <button onClick={onDelete}>Delete Edge</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edge;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EACnC;EACA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC;EAC5B,MAAMC,MAAM,GAAGJ,IAAI,CAACK,EAAE,CAAC,CAAC;;EAExB;EACA,MAAMC,SAAS,GAAG;IAChBC,IAAI,EAAEL,QAAQ,CAACM,CAAC;IAChBC,GAAG,EAAEP,QAAQ,CAACQ,CAAC;IACfC,KAAK,EAAEC,IAAI,CAACC,GAAG,CAACX,QAAQ,CAACM,CAAC,GAAGJ,MAAM,CAACI,CAAC,CAAC;IACtCM,MAAM,EAAEF,IAAI,CAACC,GAAG,CAACX,QAAQ,CAACQ,CAAC,GAAGN,MAAM,CAACM,CAAC,CAAC;IACvCK,SAAS,EAAE,UAAUH,IAAI,CAACI,KAAK,CAACZ,MAAM,CAACM,CAAC,GAAGR,QAAQ,CAACQ,CAAC,EAAEN,MAAM,CAACI,CAAC,GAAGN,QAAQ,CAACM,CAAC,CAAC;EAC/E,CAAC;EAED,oBACEV,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAACC,KAAK,EAAEZ,SAAU;IAAAa,QAAA,eACrCrB,OAAA;MAAQsB,OAAO,EAAEnB,QAAS;MAAAkB,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACC,EAAA,GAnBI1B,IAAI;AAqBV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}