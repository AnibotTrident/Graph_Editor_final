{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Desktop\\\\Anibot\\\\code\\\\ottonomy\\\\client\\\\src\\\\components\\\\Edge.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edge = ({\n  source,\n  target\n}) => {\n  _s();\n  const [line, setLine] = useState({\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0\n  });\n  useEffect(() => {\n    const updateLine = () => {\n      const sourceNode = document.getElementById(source);\n      const targetNode = document.getElementById(target);\n      if (sourceNode && targetNode) {\n        const sourceRect = sourceNode.getBoundingClientRect();\n        const targetRect = targetNode.getBoundingClientRect();\n        setLine({\n          x1: sourceRect.left + sourceRect.width / 2,\n          y1: sourceRect.top + sourceRect.height / 2,\n          x2: targetRect.left + targetRect.width / 2,\n          y2: targetRect.top + targetRect.height / 2\n        });\n      }\n    };\n    updateLine();\n    window.addEventListener('resize', updateLine);\n    return () => {\n      window.removeEventListener('resize', updateLine);\n    };\n  }, [source, target]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: line.x1,\n      y1: line.y1,\n      x2: line.x2,\n      y2: line.y2,\n      stroke: \"black\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Edge, \"Yqnycvb25Fgr8LZ7wC79lK1T+RM=\");\n_c = Edge;\nexport default Edge;\nvar _c;\n$RefreshReg$(_c, \"Edge\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Edge","source","target","_s","line","setLine","x1","y1","x2","y2","updateLine","sourceNode","document","getElementById","targetNode","sourceRect","getBoundingClientRect","targetRect","left","width","top","height","window","addEventListener","removeEventListener","style","position","pointerEvents","children","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anish/Desktop/Anibot/code/ottonomy/client/src/components/Edge.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Edge = ({ source, target }) => {\r\n  const [line, setLine] = useState({ x1: 0, y1: 0, x2: 0, y2: 0 });\r\n\r\n  useEffect(() => {\r\n    const updateLine = () => {\r\n      const sourceNode = document.getElementById(source);\r\n      const targetNode = document.getElementById(target);\r\n      if (sourceNode && targetNode) {\r\n        const sourceRect = sourceNode.getBoundingClientRect();\r\n        const targetRect = targetNode.getBoundingClientRect();\r\n        setLine({\r\n          x1: sourceRect.left + sourceRect.width / 2,\r\n          y1: sourceRect.top + sourceRect.height / 2,\r\n          x2: targetRect.left + targetRect.width / 2,\r\n          y2: targetRect.top + targetRect.height / 2,\r\n        });\r\n      }\r\n    };\r\n\r\n    updateLine();\r\n    window.addEventListener('resize', updateLine);\r\n    return () => {\r\n      window.removeEventListener('resize', updateLine);\r\n    };\r\n  }, [source, target]);\r\n\r\n  return (\r\n    <svg\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        pointerEvents: 'none',\r\n      }}\r\n    >\r\n      <line\r\n        x1={line.x1}\r\n        y1={line.y1}\r\n        x2={line.x2}\r\n        y2={line.y2}\r\n        stroke=\"black\"\r\n        strokeWidth=\"2\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Edge;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAAES,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAE;EAAE,CAAC,CAAC;EAEhEb,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAACZ,MAAM,CAAC;MAClD,MAAMa,UAAU,GAAGF,QAAQ,CAACC,cAAc,CAACX,MAAM,CAAC;MAClD,IAAIS,UAAU,IAAIG,UAAU,EAAE;QAC5B,MAAMC,UAAU,GAAGJ,UAAU,CAACK,qBAAqB,CAAC,CAAC;QACrD,MAAMC,UAAU,GAAGH,UAAU,CAACE,qBAAqB,CAAC,CAAC;QACrDX,OAAO,CAAC;UACNC,EAAE,EAAES,UAAU,CAACG,IAAI,GAAGH,UAAU,CAACI,KAAK,GAAG,CAAC;UAC1CZ,EAAE,EAAEQ,UAAU,CAACK,GAAG,GAAGL,UAAU,CAACM,MAAM,GAAG,CAAC;UAC1Cb,EAAE,EAAES,UAAU,CAACC,IAAI,GAAGD,UAAU,CAACE,KAAK,GAAG,CAAC;UAC1CV,EAAE,EAAEQ,UAAU,CAACG,GAAG,GAAGH,UAAU,CAACI,MAAM,GAAG;QAC3C,CAAC,CAAC;MACJ;IACF,CAAC;IAEDX,UAAU,CAAC,CAAC;IACZY,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEb,UAAU,CAAC;IAC7C,OAAO,MAAM;MACXY,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEd,UAAU,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,CAACT,MAAM,EAAEC,MAAM,CAAC,CAAC;EAEpB,oBACEH,OAAA;IACE0B,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBP,KAAK,EAAE,MAAM;MACbE,MAAM,EAAE,MAAM;MACdM,aAAa,EAAE;IACjB,CAAE;IAAAC,QAAA,eAEF7B,OAAA;MACEO,EAAE,EAAEF,IAAI,CAACE,EAAG;MACZC,EAAE,EAAEH,IAAI,CAACG,EAAG;MACZC,EAAE,EAAEJ,IAAI,CAACI,EAAG;MACZC,EAAE,EAAEL,IAAI,CAACK,EAAG;MACZoB,MAAM,EAAC,OAAO;MACdC,WAAW,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA7CIH,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA+CV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}