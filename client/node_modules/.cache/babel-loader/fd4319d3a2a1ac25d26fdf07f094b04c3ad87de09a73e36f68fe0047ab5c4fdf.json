{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Desktop\\\\Anibot\\\\code\\\\ottonomy\\\\client\\\\src\\\\components\\\\GraphEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setGraph, addNode, addEdge, removeEdge, removeNode, undo, redo } from '../redux/graphSlice';\nimport Node from './Node';\nimport Edge from './Edge';\nimport { fetchGraph, saveGraph } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphEditor = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    nodes,\n    edges\n  } = useSelector(state => state.graph);\n  const [isCreateEdgeMode, setCreateEdgeMode] = useState(false);\n  const [selectedNodes, setSelectedNodes] = useState([]);\n  useEffect(() => {\n    const loadGraph = async () => {\n      const graph = await fetchGraph('default'); // Use the seeded graph ID\n      if (graph) dispatch(setGraph(graph));\n    };\n    loadGraph();\n    const handleKeyDown = event => {\n      if (event.ctrlKey && event.key === 'z') {\n        dispatch(undo());\n      } else if (event.ctrlKey && event.key === 'y') {\n        dispatch(redo());\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch]);\n  const handleAddNode = () => {\n    const position = {\n      x: Math.random() * 500,\n      y: Math.random() * 500\n    };\n    dispatch(addNode({\n      position\n    }));\n  };\n  const handleSave = async () => {\n    const graph = {\n      nodes,\n      edges\n    };\n    await saveGraph(graph);\n    alert('Graph saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graph Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-canvas\",\n      children: [edges.map((edge, index) => /*#__PURE__*/_jsxDEV(Edge, {\n        source: edge.source,\n        target: edge.target,\n        onDelete: () => dispatch(removeEdge({\n          source: edge.source,\n          target: edge.target\n        }))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), nodes.map((node, index) => /*#__PURE__*/_jsxDEV(Node, {\n        id: node.id,\n        label: `N${index + 1}`,\n        position: node.position,\n        onClick: () => {},\n        onDelete: () => dispatch(removeNode(node.id))\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddNode,\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(undo()),\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(redo()),\n      children: \"Redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphEditor, \"AUz1OBodic7VuBNHg0L8j9L+ZhQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GraphEditor;\nexport default GraphEditor;\nvar _c;\n$RefreshReg$(_c, \"GraphEditor\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","setGraph","addNode","addEdge","removeEdge","removeNode","undo","redo","Node","Edge","fetchGraph","saveGraph","jsxDEV","_jsxDEV","GraphEditor","_s","dispatch","nodes","edges","state","graph","isCreateEdgeMode","setCreateEdgeMode","selectedNodes","setSelectedNodes","loadGraph","handleKeyDown","event","ctrlKey","key","window","addEventListener","removeEventListener","handleAddNode","position","x","Math","random","y","handleSave","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","edge","index","source","target","onDelete","node","id","label","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anish/Desktop/Anibot/code/ottonomy/client/src/components/GraphEditor.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setGraph,\r\n  addNode,\r\n  addEdge,\r\n  removeEdge,\r\n  removeNode,\r\n  undo,\r\n  redo,\r\n} from '../redux/graphSlice';\r\nimport Node from './Node';\r\nimport Edge from './Edge';\r\nimport { fetchGraph, saveGraph } from '../utils/api';\r\n\r\nconst GraphEditor = () => {\r\n  const dispatch = useDispatch();\r\n  const { nodes, edges } = useSelector((state) => state.graph);\r\n  const [isCreateEdgeMode, setCreateEdgeMode] = useState(false);\r\n  const [selectedNodes, setSelectedNodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadGraph = async () => {\r\n      const graph = await fetchGraph('default'); // Use the seeded graph ID\r\n      if (graph) dispatch(setGraph(graph));\r\n    };\r\n    loadGraph();\r\n\r\n    const handleKeyDown = (event) => {\r\n      if (event.ctrlKey && event.key === 'z') {\r\n        dispatch(undo());\r\n      } else if (event.ctrlKey && event.key === 'y') {\r\n        dispatch(redo());\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const handleAddNode = () => {\r\n    const position = { x: Math.random() * 500, y: Math.random() * 500 };\r\n    dispatch(addNode({ position }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const graph = { nodes, edges };\r\n    await saveGraph(graph);\r\n    alert('Graph saved successfully!');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Graph Editor</h1>\r\n      <div className=\"graph-canvas\">\r\n        {edges.map((edge, index) => (\r\n          <Edge\r\n            key={index}\r\n            source={edge.source}\r\n            target={edge.target}\r\n            onDelete={() =>\r\n              dispatch(removeEdge({ source: edge.source, target: edge.target }))\r\n            }\r\n          />\r\n        ))}\r\n        {nodes.map((node, index) => (\r\n          <Node\r\n            key={node.id}\r\n            id={node.id}\r\n            label={`N${index + 1}`}\r\n            position={node.position}\r\n            onClick={() => {}}\r\n            onDelete={() => dispatch(removeNode(node.id))}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddNode}>Add Node</button>\r\n      <button onClick={handleSave}>Save Graph</button>\r\n      <button onClick={() => dispatch(undo())}>Undo</button>\r\n      <button onClick={() => dispatch(redo())}>Redo</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}